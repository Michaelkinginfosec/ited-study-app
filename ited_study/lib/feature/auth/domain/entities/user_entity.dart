// lib/feature/auth/domain/entities/user_entity.dart

import 'dart:convert';

import 'package:hive/hive.dart';

part 'user_entity.g.dart'; // This file will be generated by Hive

@HiveType(typeId: 0)
class UserEntity extends HiveObject {
  @HiveField(0)
  final String userId;
  @HiveField(1)
  final String fullName;
  @HiveField(2)
  final String email;
  @HiveField(3)
  final String department;
  @HiveField(4)
  final String level;
  @HiveField(5)
  final String password;
  @HiveField(6)
  final bool verified; // Add verified field

  UserEntity({
    required this.userId,
    required this.fullName,
    required this.email,
    required this.department,
    required this.level,
    required this.password,
    this.verified = false, // Default value if not provided
  });

  Map<String, dynamic> toJson() {
    final data = {
      'userId': userId,
      'fullName': fullName,
      'email': email,
      'department': department,
      'level': level,
      'password': password,
      'verified': verified, // Include verified field
    };
    return data;
  }

  factory UserEntity.fromMap(Map<String, dynamic> map) {
    return UserEntity(
      userId: map['_id'] as String,
      fullName: map['fullName'] as String,
      email: map['email'] as String,
      department: map['department'] as String,
      level: map['level'] as String,
      password: map['password'] as String,
      verified: map['verified'] as bool? ?? false,
    );
  }

  String toJsonString() => json.encode(toJson());

  factory UserEntity.fromJson(String source) =>
      UserEntity.fromMap(json.decode(source) as Map<String, dynamic>);
}
